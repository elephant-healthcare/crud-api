aliases:
  - &restore_pkg_cache
    keys:
      - v1-node-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
      - v1-node-{{ arch }}-{{ .Branch }}-
      - v1-node-{{ arch }}-
  
  - &save_pkg_cache
    name: Saving package cache
    key: v1-node-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
    paths:
      - node_modules
  
  - &yarn_install
    name: Install packages
    command: yarn install
  
  - &store_coverage_results
    store_test_results:
    path: ./reports

  - &store_coverage_artifacts
    store_artifacts:
    path: ./reports
  
  - &attach_workspace
    attach_workspace:
      at: ~/crud-api
  
  - &dependencies
    - checkout
    - *attach_workspace
    - restore_cache: *restore_pkg_cache
    - run: *yarn_install
    - save_cache: *save_pkg_cache
    - persist_to_workspace:
        root: .
        paths:
         - node_modules
  
  - &lint_steps
    - checkout
    - *attach_workspace
    - restore_cache: *restore_pkg_cache
    - run: *yarn_install
    - save_cache: *save_pkg_cache
    - persist_to_workspace:
        root: .
        paths:
         - node_modules
    - run:
      name: Analyze code for smells
      command: yarn lint
    - *store_coverage_results
    - *store_coverage_artifacts
  
  - &test_steps
    - checkout
    - *attach_workspace
    - restore_cache: *restore_pkg_cache
    - run: *yarn_install
    - save_cache: *save_pkg_cache
    - persist_to_workspace:
        root: .
        paths:
         - node_modules
    - run:
      name: Running test
      command: yarn test
    - *store_coverage_results
    - *store_coverage_artifacts

  
  - &build_image
    working_directory: ~/crud-api
    docker:
      - image: circleci/node:lts
          

version: 2
jobs:
  build:
    <<: *build_image

    # parallelism: 2
    steps: *dependencies
  
  lint:
    <<: *build_image

    steps: *lint_steps
  
  test:
    <<: *build_image

    steps: *test_steps

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - lint
      - test